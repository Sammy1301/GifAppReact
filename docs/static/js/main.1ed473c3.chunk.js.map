{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setSeries","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","seri","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGif","series","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","serie","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,UAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAW,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAKd,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAlBI,SAACP,GACjBF,EAAeE,EAAEQ,OAAOF,a,QCNnBG,EAAc,SAAC,GAAwB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEtC,OACI,sBAAKC,UAAY,6CAAjB,UACI,qBAAKC,IAAQF,EAAMG,IAAQJ,IAC3B,kCAAMA,S,uBCPLK,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACZN,EADY,iDACqCO,UAAWF,GADhD,+DAECG,MAAOR,GAFR,cAEZS,EAFY,gBAGMA,EAAKC,OAHX,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATvB,kBAYVY,GAZU,4CAAH,sDCINK,EAAW,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OAGvB,ECHwB,SAAEA,GAC1B,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPjB,EAAQC,GACPiB,MAAM,SAAAC,GACCH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAIGc,EDf0BK,CAAcnB,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAGrB,OACI,qCACI,6BAAMb,IACJa,GAAW,4CACjB,qBAAKjB,UAAY,YAAjB,SAEYc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIhB,aEbzB2B,EAAe,WAExB,MAA4BzC,mBAAS,CAAC,iBAAtC,mBAAOqB,EAAP,KAAetB,EAAf,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,UAAcA,IAC3B,uBAEA,6BAEQsB,EAAOQ,KAAK,SAAAa,GAAK,OACb,cAAC,EAAD,CAEArB,OAAWqB,GADHA,Y,MCnBhCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1ed473c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( {setSeries} ) =>{\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInput = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(InputValue.trim().length > 2){\r\n            setSeries( seri => [InputValue, ...seri ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n            <form onSubmit = { handleSubmit }>\r\n                <input \r\n                    type = 'text'\r\n                    value = {InputValue}\r\n                    onChange = { handleInput }\r\n                />\r\n            </form>\r\n    )\r\n} \r\n\r\nAddCategory.propTypes ={\r\n    setSeries: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url }) => {\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__backInLeft\">\r\n            <img src = { url } alt = { title } />\r\n            <p> { title }</p> \r\n        </div>\r\n    )\r\n}\r\n","export const getGif = async ( series ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( series ) }&limit=10&api_key=ULJDAMGKmLOA4lAkMBAW29iHfz7paM9s`;\r\n    const resp = await fetch( url );\r\n    const { data }  = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return  gifs;\r\n    \r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid =  ({ series }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( series );\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ series }</h3>\r\n            { loading && <p>Cargando...</p>}\r\n        <div className = \"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n\r\n        </>\r\n            )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( series ) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGif( series )\r\n        .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n        } )\r\n    }, [series])\r\n\r\n    \r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [series, setSeries] = useState(['Demon Slayer']);\r\n\r\n\r\n    // const handelAdd = () =>{\r\n    //     // setSeries( ['Loki', ...series] );\r\n    //     setSeries( seri => [...seri, 'Loki']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setSeries = { setSeries }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    series.map( serie => \r\n                        <GifGrid\r\n                        key = { serie }\r\n                        series = { serie }\r\n                        />\r\n                    )\r\n                }   \r\n            </ol>\r\n        </>\r\n    )\r\n} \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}